
set(AI_LIBS @LIBS@)
set(AI_EXECUTION_PROVIDER @EXECUTION_PROVIDER@)
if(CMAKE_SYSTEM_PROCESSOR MATCHES "amd64.*|x86_64.*|AMD64.*")
    set(X86_64 1)
elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "^(aarch64.*|AARCH64.*|arm64.*|ARM64.*)")
    set(AARCH64 1)
endif()

get_filename_component(AIPRODUCTION_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

set(Torch_DIR ${CMAKE_CURRENT_LIST_DIR}/deps/libtorch/share/cmake/Torch/)

find_package(Torch REQUIRED)

if(${X86_64})
    
    if(UNIX)
        find_package(OpenCV 4.4 EXACT REQUIRED PATHS ${CMAKE_CURRENT_LIST_DIR}/deps/opencv/)
    endif()
    if (MSVC)
        find_package(OpenCV 4.4 EXACT REQUIRED PATHS ${CMAKE_CURRENT_LIST_DIR}/deps/opencv/)
    endif()
elseif(${AARCH64})
    find_package(OpenCV 4.1 REQUIRED)
endif()

#find_package(OpenCV 4.1 EXACT REQUIRED PATHS ${CMAKE_CURRENT_LIST_DIR}/deps/opencv/)

set(ONNXRUNTIME_INCLUDE_DIR ${CMAKE_CURRENT_LIST_DIR}/deps/onnxruntime/${AI_EXECUTION_PROVIDER}/include/)

# see difference with current_List_DIR
set(AIPRODUCTION_INCLUDE_DIRS ${CMAKE_CURRENT_LIST_DIR}/include/ ${TORCH_INCLUDE_DIRS} ${OpenCV_INCLUDE_DIRS} ${ONNXRUNTIME_INCLUDE_DIR} ${ONNXRUNTIME_INCLUDE_DIR}onnxruntime/core/session)


#include("${AIPRODUCTION_CMAKE_DIR}/aiproductionTargets.cmake")

link_directories(${CMAKE_CURRENT_LIST_DIR}/lib)
link_directories(${CMAKE_CURRENT_LIST_DIR}/deps/onnxruntime/${AI_EXECUTION_PROVIDER}/lib/onnxruntime/)

set(AIPRODUCTION_LIBS ${AI_LIBS} ${OpenCV_LIBS} ${TORCH_LIBRARIES} onnxruntime) 


